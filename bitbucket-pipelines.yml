image: docker.io/atlassian/default-image:5

definitions:
  services:
    docker:
      memory: 2048
  steps:
    - step: &test
        name: Run tests
        image: docker.io/library/eclipse-temurin:21-jdk
        clone:
          enabled: true
        caches:
          - maven
        services:
          - docker
        script:
          - export TESTCONTAINERS_RYUK_DISABLED=true
          - export TESTCONTAINERS_RYUK_CONTAINER_PRIVILEGED=false
          - if [ -n "${BITBUCKET_TAG}" ]; then
            export REVISION="${BITBUCKET_TAG#v}";
            else
            export REVISION="${BITBUCKET_COMMIT::7}";
            fi
          - ./mvnw --batch-mode test -Drevision=${REVISION}
        artifacts:
          - target/surefire-reports/**

    - step: &build-jar
        name: Build JAR
        image: docker.io/library/eclipse-temurin:21-jdk
        clone:
          enabled: true
        caches:
          - maven
        script:
          - if [ -n "${BITBUCKET_TAG}" ]; then
            export REVISION="${BITBUCKET_TAG#v}";
            else
            export REVISION="${BITBUCKET_COMMIT::7}";
            fi
          - ./mvnw --batch-mode verify -Drevision=${REVISION} -DskipTests -DskipITs
        artifacts:
          - target/quarkus-template-*-runner.jar

    - step: &release
        name: Create release
        image: docker.io/library/eclipse-temurin:21-jdk
        clone:
          enabled: true
        script:
          - export REVISION="${BITBUCKET_TAG#v}"
          - ORIGINAL_JAR=$(ls target/quarkus-template-*-runner.jar | head -n 1)
          - if [ -z "${ORIGINAL_JAR}" ]; then
            echo "No JAR found"
            exit 1
            fi
          - RELEASE_JAR="quarkus-template-${REVISION}.jar"
          - echo "Renaming ${ORIGINAL_JAR} -> target/${RELEASE_JAR}"
          - mv "${ORIGINAL_JAR}" "target/${RELEASE_JAR}"
        after-script:
          - pipe: atlassian/bitbucket-upload-file:0.7.4
            variables:
              BITBUCKET_ACCESS_TOKEN: "${BITPIPE}"
              FILENAME: "target/${RELEASE_JAR}"

pipelines:
  branches:
    "**":
      - step: *test
      - step: *build-jar

  pull-requests:
    "main":
      - step: *test
      - step: *build-jar

  tags:
    "v*.*.*":
      - step: *test
      - step: *build-jar
      - step: *release
